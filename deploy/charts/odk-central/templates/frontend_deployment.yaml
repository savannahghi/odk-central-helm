apiVersion: apps/v1
kind: Deployment
metadata:
  name: odk-central-frontend
  labels:
    {{- include "odk-central.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "odk-central.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "odk-central.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: decode-secrets
          image: busybox:1.28
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /etc/letsencrypt/live/odk-frontend.savannahghi.org/
              echo "${TLS_KEY}" > /etc/letsencrypt/live/odk-frontend.savannahghi.org/privkey.pem
              echo "${TLS_CRT}" > /etc/letsencrypt/live/odk-frontend.savannahghi.org/fullchain.pem
          env:
            - name: TLS_KEY
              valueFrom:
                secretKeyRef:
                  name: letsencrypt-prod
                  key: tls.key

            - name: TLS_CRT
              valueFrom:
                secretKeyRef:
                  name: letsencrypt-prod
                  key: tls.crt

          volumeMounts:
          - name: ssl-certs
            mountPath: /etc/letsencrypt/live/odk-frontend.savannahghi.org/

      containers:
        - name: odk-central-frontend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.frontend.image.registry }}/{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.frontendport }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        
          env:
            - name: SSL_TYPE
              value: "letsencrypt"

            - name: DOMAIN
              value: {{ .Values.networking.frontend.ingress.host }}

            - name: SYSADMIN_EMAIL
              value: {{ .Values.app.container.env.sysAdminEmail | quote }}
            
            - name: CERTBOT_EMAIL
              value: {{ .Values.app.container.env.sysAdminEmail | quote }}

            - name: HTTP_PORT
              value: "80"

            - name: HTTPS_PORT
              value: "443"

          volumeMounts:
          - name: ssl-certs
            mountPath: /etc/letsencrypt/live/odk-frontend.savannahghi.org/

      volumes:
        - name: ssl-certs
          emptyDir: {}